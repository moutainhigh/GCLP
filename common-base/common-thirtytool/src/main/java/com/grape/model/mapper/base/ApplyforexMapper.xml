<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.grape.model.mapper.base.ApplyforexMapper" >
  <resultMap id="BaseResultMap" type="com.grape.model.db.Applyforex" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="mainborrower" property="mainborrower" jdbcType="VARCHAR" />
    <result column="identifino" property="identifino" jdbcType="VARCHAR" />
    <result column="examount" property="examount" jdbcType="DECIMAL" />
    <result column="exage" property="exage" jdbcType="VARCHAR" />
    <result column="exinterestrate" property="exinterestrate" jdbcType="DECIMAL" />
    <result column="repaymethod" property="repaymethod" jdbcType="VARCHAR" />
    <result column="exreason" property="exreason" jdbcType="VARCHAR" />
    <result column="newworkid" property="newworkid" jdbcType="VARCHAR" />
    <result column="workid" property="workid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mainborrower, identifino, examount, exage, exinterestrate, repaymethod, exreason, 
    newworkid, workid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.grape.model.db.ApplyforexExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from applyforex
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from applyforex
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from applyforex
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.grape.model.db.ApplyforexExample" >
    delete from applyforex
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.grape.model.db.Applyforex" >
    insert into applyforex (id, mainborrower, identifino, 
      examount, exage, exinterestrate, 
      repaymethod, exreason, newworkid, 
      workid)
    values (#{id,jdbcType=VARCHAR}, #{mainborrower,jdbcType=VARCHAR}, #{identifino,jdbcType=VARCHAR}, 
      #{examount,jdbcType=DECIMAL}, #{exage,jdbcType=VARCHAR}, #{exinterestrate,jdbcType=DECIMAL}, 
      #{repaymethod,jdbcType=VARCHAR}, #{exreason,jdbcType=VARCHAR}, #{newworkid,jdbcType=VARCHAR}, 
      #{workid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.grape.model.db.Applyforex" >
    insert into applyforex
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mainborrower != null" >
        mainborrower,
      </if>
      <if test="identifino != null" >
        identifino,
      </if>
      <if test="examount != null" >
        examount,
      </if>
      <if test="exage != null" >
        exage,
      </if>
      <if test="exinterestrate != null" >
        exinterestrate,
      </if>
      <if test="repaymethod != null" >
        repaymethod,
      </if>
      <if test="exreason != null" >
        exreason,
      </if>
      <if test="newworkid != null" >
        newworkid,
      </if>
      <if test="workid != null" >
        workid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="mainborrower != null" >
        #{mainborrower,jdbcType=VARCHAR},
      </if>
      <if test="identifino != null" >
        #{identifino,jdbcType=VARCHAR},
      </if>
      <if test="examount != null" >
        #{examount,jdbcType=DECIMAL},
      </if>
      <if test="exage != null" >
        #{exage,jdbcType=VARCHAR},
      </if>
      <if test="exinterestrate != null" >
        #{exinterestrate,jdbcType=DECIMAL},
      </if>
      <if test="repaymethod != null" >
        #{repaymethod,jdbcType=VARCHAR},
      </if>
      <if test="exreason != null" >
        #{exreason,jdbcType=VARCHAR},
      </if>
      <if test="newworkid != null" >
        #{newworkid,jdbcType=VARCHAR},
      </if>
      <if test="workid != null" >
        #{workid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.grape.model.db.ApplyforexExample" resultType="java.lang.Integer" >
    select count(*) from applyforex
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update applyforex
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.mainborrower != null" >
        mainborrower = #{record.mainborrower,jdbcType=VARCHAR},
      </if>
      <if test="record.identifino != null" >
        identifino = #{record.identifino,jdbcType=VARCHAR},
      </if>
      <if test="record.examount != null" >
        examount = #{record.examount,jdbcType=DECIMAL},
      </if>
      <if test="record.exage != null" >
        exage = #{record.exage,jdbcType=VARCHAR},
      </if>
      <if test="record.exinterestrate != null" >
        exinterestrate = #{record.exinterestrate,jdbcType=DECIMAL},
      </if>
      <if test="record.repaymethod != null" >
        repaymethod = #{record.repaymethod,jdbcType=VARCHAR},
      </if>
      <if test="record.exreason != null" >
        exreason = #{record.exreason,jdbcType=VARCHAR},
      </if>
      <if test="record.newworkid != null" >
        newworkid = #{record.newworkid,jdbcType=VARCHAR},
      </if>
      <if test="record.workid != null" >
        workid = #{record.workid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update applyforex
    set id = #{record.id,jdbcType=VARCHAR},
      mainborrower = #{record.mainborrower,jdbcType=VARCHAR},
      identifino = #{record.identifino,jdbcType=VARCHAR},
      examount = #{record.examount,jdbcType=DECIMAL},
      exage = #{record.exage,jdbcType=VARCHAR},
      exinterestrate = #{record.exinterestrate,jdbcType=DECIMAL},
      repaymethod = #{record.repaymethod,jdbcType=VARCHAR},
      exreason = #{record.exreason,jdbcType=VARCHAR},
      newworkid = #{record.newworkid,jdbcType=VARCHAR},
      workid = #{record.workid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.grape.model.db.Applyforex" >
    update applyforex
    <set >
      <if test="mainborrower != null" >
        mainborrower = #{mainborrower,jdbcType=VARCHAR},
      </if>
      <if test="identifino != null" >
        identifino = #{identifino,jdbcType=VARCHAR},
      </if>
      <if test="examount != null" >
        examount = #{examount,jdbcType=DECIMAL},
      </if>
      <if test="exage != null" >
        exage = #{exage,jdbcType=VARCHAR},
      </if>
      <if test="exinterestrate != null" >
        exinterestrate = #{exinterestrate,jdbcType=DECIMAL},
      </if>
      <if test="repaymethod != null" >
        repaymethod = #{repaymethod,jdbcType=VARCHAR},
      </if>
      <if test="exreason != null" >
        exreason = #{exreason,jdbcType=VARCHAR},
      </if>
      <if test="newworkid != null" >
        newworkid = #{newworkid,jdbcType=VARCHAR},
      </if>
      <if test="workid != null" >
        workid = #{workid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.grape.model.db.Applyforex" >
    update applyforex
    set mainborrower = #{mainborrower,jdbcType=VARCHAR},
      identifino = #{identifino,jdbcType=VARCHAR},
      examount = #{examount,jdbcType=DECIMAL},
      exage = #{exage,jdbcType=VARCHAR},
      exinterestrate = #{exinterestrate,jdbcType=DECIMAL},
      repaymethod = #{repaymethod,jdbcType=VARCHAR},
      exreason = #{exreason,jdbcType=VARCHAR},
      newworkid = #{newworkid,jdbcType=VARCHAR},
      workid = #{workid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>