<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.grape.model.mapper.base.WorkhistoryMapper" >
  <resultMap id="BaseResultMap" type="com.grape.model.db.Workhistory" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="workid" property="workid" jdbcType="VARCHAR" />
    <result column="fork" property="fork" jdbcType="VARCHAR" />
    <result column="branch" property="branch" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="node" property="node" jdbcType="VARCHAR" />
    <result column="nextnode" property="nextnode" jdbcType="VARCHAR" />
    <result column="operation" property="operation" jdbcType="VARCHAR" />
    <result column="operdate" property="operdate" jdbcType="TIMESTAMP" />
    <result column="stage" property="stage" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.grape.model.db.Workhistory" extends="BaseResultMap" >
    <result column="notation" property="notation" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, workid, fork, branch, userid, node, nextnode, operation, operdate, stage, type
  </sql>
  <sql id="Blob_Column_List" >
    notation
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.grape.model.db.WorkhistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from workhistory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.grape.model.db.WorkhistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workhistory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from workhistory
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from workhistory
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.grape.model.db.WorkhistoryExample" >
    delete from workhistory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.grape.model.db.Workhistory" >
    insert into workhistory (id, workid, fork, 
      branch, userid, node, 
      nextnode, operation, operdate, 
      stage, type, notation
      )
    values (#{id,jdbcType=VARCHAR}, #{workid,jdbcType=VARCHAR}, #{fork,jdbcType=VARCHAR}, 
      #{branch,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{node,jdbcType=VARCHAR}, 
      #{nextnode,jdbcType=VARCHAR}, #{operation,jdbcType=VARCHAR}, #{operdate,jdbcType=TIMESTAMP}, 
      #{stage,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{notation,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.grape.model.db.Workhistory" >
    insert into workhistory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="workid != null" >
        workid,
      </if>
      <if test="fork != null" >
        fork,
      </if>
      <if test="branch != null" >
        branch,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="node != null" >
        node,
      </if>
      <if test="nextnode != null" >
        nextnode,
      </if>
      <if test="operation != null" >
        operation,
      </if>
      <if test="operdate != null" >
        operdate,
      </if>
      <if test="stage != null" >
        stage,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="notation != null" >
        notation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="workid != null" >
        #{workid,jdbcType=VARCHAR},
      </if>
      <if test="fork != null" >
        #{fork,jdbcType=VARCHAR},
      </if>
      <if test="branch != null" >
        #{branch,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="node != null" >
        #{node,jdbcType=VARCHAR},
      </if>
      <if test="nextnode != null" >
        #{nextnode,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="operdate != null" >
        #{operdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="notation != null" >
        #{notation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.grape.model.db.WorkhistoryExample" resultType="java.lang.Integer" >
    select count(*) from workhistory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update workhistory
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.workid != null" >
        workid = #{record.workid,jdbcType=VARCHAR},
      </if>
      <if test="record.fork != null" >
        fork = #{record.fork,jdbcType=VARCHAR},
      </if>
      <if test="record.branch != null" >
        branch = #{record.branch,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.node != null" >
        node = #{record.node,jdbcType=VARCHAR},
      </if>
      <if test="record.nextnode != null" >
        nextnode = #{record.nextnode,jdbcType=VARCHAR},
      </if>
      <if test="record.operation != null" >
        operation = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.operdate != null" >
        operdate = #{record.operdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stage != null" >
        stage = #{record.stage,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.notation != null" >
        notation = #{record.notation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update workhistory
    set id = #{record.id,jdbcType=VARCHAR},
      workid = #{record.workid,jdbcType=VARCHAR},
      fork = #{record.fork,jdbcType=VARCHAR},
      branch = #{record.branch,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      node = #{record.node,jdbcType=VARCHAR},
      nextnode = #{record.nextnode,jdbcType=VARCHAR},
      operation = #{record.operation,jdbcType=VARCHAR},
      operdate = #{record.operdate,jdbcType=TIMESTAMP},
      stage = #{record.stage,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      notation = #{record.notation,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update workhistory
    set id = #{record.id,jdbcType=VARCHAR},
      workid = #{record.workid,jdbcType=VARCHAR},
      fork = #{record.fork,jdbcType=VARCHAR},
      branch = #{record.branch,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      node = #{record.node,jdbcType=VARCHAR},
      nextnode = #{record.nextnode,jdbcType=VARCHAR},
      operation = #{record.operation,jdbcType=VARCHAR},
      operdate = #{record.operdate,jdbcType=TIMESTAMP},
      stage = #{record.stage,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.grape.model.db.Workhistory" >
    update workhistory
    <set >
      <if test="workid != null" >
        workid = #{workid,jdbcType=VARCHAR},
      </if>
      <if test="fork != null" >
        fork = #{fork,jdbcType=VARCHAR},
      </if>
      <if test="branch != null" >
        branch = #{branch,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="node != null" >
        node = #{node,jdbcType=VARCHAR},
      </if>
      <if test="nextnode != null" >
        nextnode = #{nextnode,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        operation = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="operdate != null" >
        operdate = #{operdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stage != null" >
        stage = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="notation != null" >
        notation = #{notation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.grape.model.db.Workhistory" >
    update workhistory
    set workid = #{workid,jdbcType=VARCHAR},
      fork = #{fork,jdbcType=VARCHAR},
      branch = #{branch,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      node = #{node,jdbcType=VARCHAR},
      nextnode = #{nextnode,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      operdate = #{operdate,jdbcType=TIMESTAMP},
      stage = #{stage,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      notation = #{notation,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.grape.model.db.Workhistory" >
    update workhistory
    set workid = #{workid,jdbcType=VARCHAR},
      fork = #{fork,jdbcType=VARCHAR},
      branch = #{branch,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      node = #{node,jdbcType=VARCHAR},
      nextnode = #{nextnode,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      operdate = #{operdate,jdbcType=TIMESTAMP},
      stage = #{stage,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>