<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.grape.model.mapper.base.LogMapper" >
  <resultMap id="BaseResultMap" type="com.grape.model.db.Log" >
    <id column="logid" property="logid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="typevalue" property="typevalue" jdbcType="VARCHAR" />
    <result column="checktl" property="checktl" jdbcType="VARCHAR" />
    <result column="organizationno" property="organizationno" jdbcType="VARCHAR" />
    <result column="departmentno" property="departmentno" jdbcType="VARCHAR" />
    <result column="ref_logid" property="refLogid" jdbcType="VARCHAR" />
    <result column="chgdt" property="chgdt" jdbcType="TIMESTAMP" />
    <result column="chgtl" property="chgtl" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.grape.model.db.Log" extends="BaseResultMap" >
    <result column="descriptions" property="descriptions" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    logid, type, typevalue, checktl, organizationno, departmentno, ref_logid, chgdt, 
    chgtl
  </sql>
  <sql id="Blob_Column_List" >
    descriptions
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.grape.model.db.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.grape.model.db.LogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where logid = #{logid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from log
    where logid = #{logid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.grape.model.db.LogExample" >
    delete from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.grape.model.db.Log" >
    insert into log (logid, type, typevalue, 
      checktl, organizationno, departmentno, 
      ref_logid, chgdt, chgtl, 
      descriptions)
    values (#{logid,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{typevalue,jdbcType=VARCHAR}, 
      #{checktl,jdbcType=VARCHAR}, #{organizationno,jdbcType=VARCHAR}, #{departmentno,jdbcType=VARCHAR}, 
      #{refLogid,jdbcType=VARCHAR}, #{chgdt,jdbcType=TIMESTAMP}, #{chgtl,jdbcType=VARCHAR}, 
      #{descriptions,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.grape.model.db.Log" >
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        logid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="typevalue != null" >
        typevalue,
      </if>
      <if test="checktl != null" >
        checktl,
      </if>
      <if test="organizationno != null" >
        organizationno,
      </if>
      <if test="departmentno != null" >
        departmentno,
      </if>
      <if test="refLogid != null" >
        ref_logid,
      </if>
      <if test="chgdt != null" >
        chgdt,
      </if>
      <if test="chgtl != null" >
        chgtl,
      </if>
      <if test="descriptions != null" >
        descriptions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logid != null" >
        #{logid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="typevalue != null" >
        #{typevalue,jdbcType=VARCHAR},
      </if>
      <if test="checktl != null" >
        #{checktl,jdbcType=VARCHAR},
      </if>
      <if test="organizationno != null" >
        #{organizationno,jdbcType=VARCHAR},
      </if>
      <if test="departmentno != null" >
        #{departmentno,jdbcType=VARCHAR},
      </if>
      <if test="refLogid != null" >
        #{refLogid,jdbcType=VARCHAR},
      </if>
      <if test="chgdt != null" >
        #{chgdt,jdbcType=TIMESTAMP},
      </if>
      <if test="chgtl != null" >
        #{chgtl,jdbcType=VARCHAR},
      </if>
      <if test="descriptions != null" >
        #{descriptions,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.grape.model.db.LogExample" resultType="java.lang.Integer" >
    select count(*) from log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update log
    <set >
      <if test="record.logid != null" >
        logid = #{record.logid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.typevalue != null" >
        typevalue = #{record.typevalue,jdbcType=VARCHAR},
      </if>
      <if test="record.checktl != null" >
        checktl = #{record.checktl,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationno != null" >
        organizationno = #{record.organizationno,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentno != null" >
        departmentno = #{record.departmentno,jdbcType=VARCHAR},
      </if>
      <if test="record.refLogid != null" >
        ref_logid = #{record.refLogid,jdbcType=VARCHAR},
      </if>
      <if test="record.chgdt != null" >
        chgdt = #{record.chgdt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chgtl != null" >
        chgtl = #{record.chgtl,jdbcType=VARCHAR},
      </if>
      <if test="record.descriptions != null" >
        descriptions = #{record.descriptions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update log
    set logid = #{record.logid,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      typevalue = #{record.typevalue,jdbcType=VARCHAR},
      checktl = #{record.checktl,jdbcType=VARCHAR},
      organizationno = #{record.organizationno,jdbcType=VARCHAR},
      departmentno = #{record.departmentno,jdbcType=VARCHAR},
      ref_logid = #{record.refLogid,jdbcType=VARCHAR},
      chgdt = #{record.chgdt,jdbcType=TIMESTAMP},
      chgtl = #{record.chgtl,jdbcType=VARCHAR},
      descriptions = #{record.descriptions,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update log
    set logid = #{record.logid,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      typevalue = #{record.typevalue,jdbcType=VARCHAR},
      checktl = #{record.checktl,jdbcType=VARCHAR},
      organizationno = #{record.organizationno,jdbcType=VARCHAR},
      departmentno = #{record.departmentno,jdbcType=VARCHAR},
      ref_logid = #{record.refLogid,jdbcType=VARCHAR},
      chgdt = #{record.chgdt,jdbcType=TIMESTAMP},
      chgtl = #{record.chgtl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.grape.model.db.Log" >
    update log
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="typevalue != null" >
        typevalue = #{typevalue,jdbcType=VARCHAR},
      </if>
      <if test="checktl != null" >
        checktl = #{checktl,jdbcType=VARCHAR},
      </if>
      <if test="organizationno != null" >
        organizationno = #{organizationno,jdbcType=VARCHAR},
      </if>
      <if test="departmentno != null" >
        departmentno = #{departmentno,jdbcType=VARCHAR},
      </if>
      <if test="refLogid != null" >
        ref_logid = #{refLogid,jdbcType=VARCHAR},
      </if>
      <if test="chgdt != null" >
        chgdt = #{chgdt,jdbcType=TIMESTAMP},
      </if>
      <if test="chgtl != null" >
        chgtl = #{chgtl,jdbcType=VARCHAR},
      </if>
      <if test="descriptions != null" >
        descriptions = #{descriptions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where logid = #{logid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.grape.model.db.Log" >
    update log
    set type = #{type,jdbcType=VARCHAR},
      typevalue = #{typevalue,jdbcType=VARCHAR},
      checktl = #{checktl,jdbcType=VARCHAR},
      organizationno = #{organizationno,jdbcType=VARCHAR},
      departmentno = #{departmentno,jdbcType=VARCHAR},
      ref_logid = #{refLogid,jdbcType=VARCHAR},
      chgdt = #{chgdt,jdbcType=TIMESTAMP},
      chgtl = #{chgtl,jdbcType=VARCHAR},
      descriptions = #{descriptions,jdbcType=LONGVARCHAR}
    where logid = #{logid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.grape.model.db.Log" >
    update log
    set type = #{type,jdbcType=VARCHAR},
      typevalue = #{typevalue,jdbcType=VARCHAR},
      checktl = #{checktl,jdbcType=VARCHAR},
      organizationno = #{organizationno,jdbcType=VARCHAR},
      departmentno = #{departmentno,jdbcType=VARCHAR},
      ref_logid = #{refLogid,jdbcType=VARCHAR},
      chgdt = #{chgdt,jdbcType=TIMESTAMP},
      chgtl = #{chgtl,jdbcType=VARCHAR}
    where logid = #{logid,jdbcType=VARCHAR}
  </update>
</mapper>