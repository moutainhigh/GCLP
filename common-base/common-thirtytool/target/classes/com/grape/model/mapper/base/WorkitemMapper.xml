<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.grape.model.mapper.base.WorkitemMapper" >
  <resultMap id="BaseResultMap" type="com.grape.model.db.Workitem" >
    <id column="workid" property="workid" jdbcType="VARCHAR" />
    <id column="fork" property="fork" jdbcType="VARCHAR" />
    <id column="branch" property="branch" jdbcType="VARCHAR" />
    <result column="stage" property="stage" jdbcType="VARCHAR" />
    <result column="node" property="node" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="TIMESTAMP" />
    <result column="authuserid" property="authuserid" jdbcType="VARCHAR" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="realtime" property="realtime" jdbcType="TIMESTAMP" />
    <result column="returnflg" property="returnflg" jdbcType="VARCHAR" />
    <result column="retscnode" property="retscnode" jdbcType="VARCHAR" />
    <result column="retscper" property="retscper" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    workid, fork, branch, stage, node, state, userid, version, authuserid, starttime, 
    realtime, returnflg, retscnode, retscper
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.grape.model.db.WorkitemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workitem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from workitem
    where workid = #{workid,jdbcType=VARCHAR}
      and fork = #{fork,jdbcType=VARCHAR}
      and branch = #{branch,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from workitem
    where workid = #{workid,jdbcType=VARCHAR}
      and fork = #{fork,jdbcType=VARCHAR}
      and branch = #{branch,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.grape.model.db.WorkitemExample" >
    delete from workitem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.grape.model.db.Workitem" >
    insert into workitem (workid, fork, branch, 
      stage, node, state, userid, 
      version, authuserid, starttime, 
      realtime, returnflg, retscnode, 
      retscper)
    values (#{workid,jdbcType=VARCHAR}, #{fork,jdbcType=VARCHAR}, #{branch,jdbcType=VARCHAR}, 
      #{stage,jdbcType=VARCHAR}, #{node,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, #{userid,jdbcType=VARCHAR}, 
      #{version,jdbcType=TIMESTAMP}, #{authuserid,jdbcType=VARCHAR}, #{starttime,jdbcType=TIMESTAMP}, 
      #{realtime,jdbcType=TIMESTAMP}, #{returnflg,jdbcType=VARCHAR}, #{retscnode,jdbcType=VARCHAR}, 
      #{retscper,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.grape.model.db.Workitem" >
    insert into workitem
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workid != null" >
        workid,
      </if>
      <if test="fork != null" >
        fork,
      </if>
      <if test="branch != null" >
        branch,
      </if>
      <if test="stage != null" >
        stage,
      </if>
      <if test="node != null" >
        node,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="authuserid != null" >
        authuserid,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="realtime != null" >
        realtime,
      </if>
      <if test="returnflg != null" >
        returnflg,
      </if>
      <if test="retscnode != null" >
        retscnode,
      </if>
      <if test="retscper != null" >
        retscper,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workid != null" >
        #{workid,jdbcType=VARCHAR},
      </if>
      <if test="fork != null" >
        #{fork,jdbcType=VARCHAR},
      </if>
      <if test="branch != null" >
        #{branch,jdbcType=VARCHAR},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="node != null" >
        #{node,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=TIMESTAMP},
      </if>
      <if test="authuserid != null" >
        #{authuserid,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="realtime != null" >
        #{realtime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnflg != null" >
        #{returnflg,jdbcType=VARCHAR},
      </if>
      <if test="retscnode != null" >
        #{retscnode,jdbcType=VARCHAR},
      </if>
      <if test="retscper != null" >
        #{retscper,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.grape.model.db.WorkitemExample" resultType="java.lang.Integer" >
    select count(*) from workitem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update workitem
    <set >
      <if test="record.workid != null" >
        workid = #{record.workid,jdbcType=VARCHAR},
      </if>
      <if test="record.fork != null" >
        fork = #{record.fork,jdbcType=VARCHAR},
      </if>
      <if test="record.branch != null" >
        branch = #{record.branch,jdbcType=VARCHAR},
      </if>
      <if test="record.stage != null" >
        stage = #{record.stage,jdbcType=VARCHAR},
      </if>
      <if test="record.node != null" >
        node = #{record.node,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=TIMESTAMP},
      </if>
      <if test="record.authuserid != null" >
        authuserid = #{record.authuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realtime != null" >
        realtime = #{record.realtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returnflg != null" >
        returnflg = #{record.returnflg,jdbcType=VARCHAR},
      </if>
      <if test="record.retscnode != null" >
        retscnode = #{record.retscnode,jdbcType=VARCHAR},
      </if>
      <if test="record.retscper != null" >
        retscper = #{record.retscper,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update workitem
    set workid = #{record.workid,jdbcType=VARCHAR},
      fork = #{record.fork,jdbcType=VARCHAR},
      branch = #{record.branch,jdbcType=VARCHAR},
      stage = #{record.stage,jdbcType=VARCHAR},
      node = #{record.node,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=CHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=TIMESTAMP},
      authuserid = #{record.authuserid,jdbcType=VARCHAR},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      realtime = #{record.realtime,jdbcType=TIMESTAMP},
      returnflg = #{record.returnflg,jdbcType=VARCHAR},
      retscnode = #{record.retscnode,jdbcType=VARCHAR},
      retscper = #{record.retscper,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.grape.model.db.Workitem" >
    update workitem
    <set >
      <if test="stage != null" >
        stage = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="node != null" >
        node = #{node,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=TIMESTAMP},
      </if>
      <if test="authuserid != null" >
        authuserid = #{authuserid,jdbcType=VARCHAR},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="realtime != null" >
        realtime = #{realtime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnflg != null" >
        returnflg = #{returnflg,jdbcType=VARCHAR},
      </if>
      <if test="retscnode != null" >
        retscnode = #{retscnode,jdbcType=VARCHAR},
      </if>
      <if test="retscper != null" >
        retscper = #{retscper,jdbcType=VARCHAR},
      </if>
    </set>
    where workid = #{workid,jdbcType=VARCHAR}
      and fork = #{fork,jdbcType=VARCHAR}
      and branch = #{branch,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.grape.model.db.Workitem" >
    update workitem
    set stage = #{stage,jdbcType=VARCHAR},
      node = #{node,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR},
      userid = #{userid,jdbcType=VARCHAR},
      version = #{version,jdbcType=TIMESTAMP},
      authuserid = #{authuserid,jdbcType=VARCHAR},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      realtime = #{realtime,jdbcType=TIMESTAMP},
      returnflg = #{returnflg,jdbcType=VARCHAR},
      retscnode = #{retscnode,jdbcType=VARCHAR},
      retscper = #{retscper,jdbcType=VARCHAR}
    where workid = #{workid,jdbcType=VARCHAR}
      and fork = #{fork,jdbcType=VARCHAR}
      and branch = #{branch,jdbcType=VARCHAR}
  </update>
</mapper>